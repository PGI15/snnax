"use strict";(self.webpackChunksnnax_docs=self.webpackChunksnnax_docs||[]).push([[532],{7296:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/snnax/","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/snnax/gettingStarted/installation","docId":"gettingStarted/installation","unlisted":false},{"type":"link","label":"Structure","href":"/snnax/gettingStarted/structure","docId":"gettingStarted/structure","unlisted":false}]},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/snnax/architecture/intro","docId":"architecture/intro","unlisted":false},{"type":"link","label":"Composed","href":"/snnax/architecture/composed","docId":"architecture/composed","unlisted":false}]},{"type":"category","label":"Layers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/snnax/layers/intro","docId":"layers/intro","unlisted":false},{"type":"link","label":"Predefined Layers","href":"/snnax/layers/predefined","docId":"layers/predefined","unlisted":false}]},{"type":"link","label":"Functions","href":"/snnax/functions","docId":"functions","unlisted":false}]},"docs":{"architecture/composed":{"id":"architecture/composed","title":"Composed","description":"The snnax.snn.composed module provides predefined architecture classes that inherit from StatefulModel and can be used to build your model. The predefined architectures include:","sidebar":"tutorialSidebar"},"architecture/intro":{"id":"architecture/intro","title":"Introduction","description":"To customize a model\'s architecture, SNNAX provides a simple way to define the structure of the model.","sidebar":"tutorialSidebar"},"functions":{"id":"functions","title":"Functions","description":"SNNAX provides helper functions to facilitate the development of custom layers and models.","sidebar":"tutorialSidebar"},"gettingStarted/installation":{"id":"gettingStarted/installation","title":"Installation","description":"You can install SNNAX from PyPI using pip:","sidebar":"tutorialSidebar"},"gettingStarted/structure":{"id":"gettingStarted/structure","title":"Structure","description":"SNNAX contains the following main components:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"image","sidebar":"tutorialSidebar"},"layers/intro":{"id":"layers/intro","title":"Introduction","description":"To finalize the model architecture, we need to define the layers that will be used in the model. SNNAX provides a simple way to define these layers. The layers can be from the equinox library, from our custom layers in the SNNAX library, or you can create your own custom layers.","sidebar":"tutorialSidebar"},"layers/predefined":{"id":"layers/predefined","title":"Predefined Layers","description":"The snnax.snn.layers module provides a range of predefined layers that simplify the construction of spiking neural networks (SNNs). These layers offer common functionalities and neuron models, allowing for easier and more efficient network design.","sidebar":"tutorialSidebar"}}}}')}}]);